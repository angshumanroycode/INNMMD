// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// index
int index(int i, int j, int k, int l, int a, int b, int c, int d);
RcppExport SEXP _INNMMD_index(SEXP iSEXP, SEXP jSEXP, SEXP kSEXP, SEXP lSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type l(lSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(index(i, j, k, l, a, b, c, d));
    return rcpp_result_gen;
END_RCPP
}
// PARAMETERS
NumericVector PARAMETERS(int n, int d, int iteration);
RcppExport SEXP _INNMMD_PARAMETERS(SEXP nSEXP, SEXP dSEXP, SEXP iterationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type iteration(iterationSEXP);
    rcpp_result_gen = Rcpp::wrap(PARAMETERS(n, d, iteration));
    return rcpp_result_gen;
END_RCPP
}
// INNMMDPRESET
List INNMMDPRESET(int n, int d, NumericVector parameters);
RcppExport SEXP _INNMMD_INNMMDPRESET(SEXP nSEXP, SEXP dSEXP, SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(INNMMDPRESET(n, d, parameters));
    return rcpp_result_gen;
END_RCPP
}
// MMD
double MMD(NumericMatrix X, int m, List subpreset);
RcppExport SEXP _INNMMD_MMD(SEXP XSEXP, SEXP mSEXP, SEXP subpresetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< List >::type subpreset(subpresetSEXP);
    rcpp_result_gen = Rcpp::wrap(MMD(X, m, subpreset));
    return rcpp_result_gen;
END_RCPP
}
// INNMMD
NumericVector INNMMD(List dlist, int n, int d, List preset);
RcppExport SEXP _INNMMD_INNMMD(SEXP dlistSEXP, SEXP nSEXP, SEXP dSEXP, SEXP presetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dlist(dlistSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< List >::type preset(presetSEXP);
    rcpp_result_gen = Rcpp::wrap(INNMMD(dlist, n, d, preset));
    return rcpp_result_gen;
END_RCPP
}
// INNMMDTEST
List INNMMDTEST(List D, int n, int d, List preset, int iteration);
RcppExport SEXP _INNMMD_INNMMDTEST(SEXP DSEXP, SEXP nSEXP, SEXP dSEXP, SEXP presetSEXP, SEXP iterationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< List >::type preset(presetSEXP);
    Rcpp::traits::input_parameter< int >::type iteration(iterationSEXP);
    rcpp_result_gen = Rcpp::wrap(INNMMDTEST(D, n, d, preset, iteration));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_INNMMD_index", (DL_FUNC) &_INNMMD_index, 8},
    {"_INNMMD_PARAMETERS", (DL_FUNC) &_INNMMD_PARAMETERS, 3},
    {"_INNMMD_INNMMDPRESET", (DL_FUNC) &_INNMMD_INNMMDPRESET, 3},
    {"_INNMMD_MMD", (DL_FUNC) &_INNMMD_MMD, 3},
    {"_INNMMD_INNMMD", (DL_FUNC) &_INNMMD_INNMMD, 4},
    {"_INNMMD_INNMMDTEST", (DL_FUNC) &_INNMMD_INNMMDTEST, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_INNMMD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
